# Install Packages
install.packages('Biostrings')
install.packages('kmer')
sessionInfo()
if (!require("BiocManager", quietly = TRUE))
################################################################
# Load Libraries:
library(Biostrings)
library(kmer)
################################################################
# Load Libraries:
library(Biostrings)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("Biostrings")
################################################################
# Load Libraries:
library(Biostrings)
################################################################
# Load Libraries:
(Biostrings)
################################################################
# Load Libraries:
library(Biostrings)
library(kmer)
getwd()
# Get a list of FASTA files in the directory
(fasta_files <- list.files(pattern = '\\.fasta$'))
fasta_files
# Read the nucleotide sequences in FASTA format.
sequences <- readAAStringSet(fasta_files)
sequences
# Count the number of base pairs in each sequence
(lengths <- lengths(sequences))
# Print the length of the shortest sequence
(shortest_length <- min(lengths))
# Trim sequences to the shortest length
trimmed_sequences <- subseq(sequences, end = shortest_length)
# Convert to a matrix for grouping
seqs <- as.matrix(trimmed_sequences)
# Generate clustering. Here, k=6, but you can experiment with other values of k.
# Remember that for k = n, you need to set nstart = n.
w <- cluster(seqs, k = 6, nstart = 6, residues = NULL, gap = "-")
plot(w, main = "", horiz = TRUE)
plot(w, main = "", horiz = TRUE)
# Get a list of FASTA files in the directory
(fasta_files <- list.files(pattern = '\\.fasta$'))
# Read the nucleotide sequences in FASTA format.
sequences <- readAAStringSet(fasta_files)
sequences
getwd()
setwd("C:/Users/rodri/Downloads/Denise")
# Get a list of FASTA files in the directory
(fasta_files <- list.files(pattern = '\\.fasta$'))
# Read the nucleotide sequences in FASTA format.
sequences <- readAAStringSet(fasta_files)
sequences
# Count the number of base pairs in each sequence
(lengths <- lengths(sequences))
# Print the length of the shortest sequence
(shortest_length <- min(lengths))
# Trim sequences to the shortest length
trimmed_sequences <- subseq(sequences, end = shortest_length)
# Convert to a matrix for grouping
seqs <- as.matrix(trimmed_sequences)
# Generate clustering. Here, k=6, but you can experiment with other values of k.
# Remember that for k = n, you need to set nstart = n.
w <- cluster(seqs, k = 6, nstart = 6, residues = NULL, gap = "-")
plot(w, main = "", horiz = TRUE)
getwd()
sequences
